input {
	file {
    	path => "/var/log/income/trn_2019-10-08.log"
		start_position => "beginning"
		codec => multiline {
      		pattern => "^%{TIME}"
      		negate => true
      		what => "previous"
    	}
  	}
}

filter {
	grok {
		#match => {"message" => "%{TIME:ctime}\s+%{NUMBER:size}\s+(?<type>(SEND|RECV)).*?\\n%{DATA:req}\\n%{GREEDYDATA:msg}"}
       	match => {
			"message" => "%{TIME:ctime}\s+%{NUMBER:size}\s+(?<type>(SEND|RECV)).*?\n%{DATA:sip_message}\n.*Call-ID: (?<call_id>([a-zA-Z0-9\-@]+))%{GREEDYDATA:msg}"
			"path" => ".*?%{YEAR:cyear}-%{MONTHNUM:cmonth}-%{MONTHDAY:cday}.log"
			"sip_message" => "SIP/2.0 %{POSINT:cc} %{GREEDYDATA:cc_text}"
		}
		break_on_match => false
	}
	mutate {
		add_field => {
			"cts" => "%{cyear}-%{cmonth}-%{cday} %{ctime}"
		}
		remove_field => ["cyear", "cmonth", "cday", "ctime", "msg"]
		convert => {
          "size" => "integer"
          "cc" => "integer"
        }
	}
	date {
		match => ["cts","yyyy-MM-dd HH:mm:ss:SSS"]
	}
	
	#if [sip_message] =~ /^SIP\/2\.0 \d{3} \w{2,}$}/ { 
		#mutate {
			#add_field => {
				#"test" => 1
			#}
		#}	
	#} else {
		#mutate {
		#	add_field => {
		#		"test" => 1
		#	}
		#}	
	#}
}

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "elastic"
		password => "changeme"
		index => "excep"
	}
}
